block variables
  - 
    var questions = [
      {
        id: 'Q1',
        question: 'Расскажите, чем, на ваш взгляд, отличается хорошая верстка от плохой с точки зрения',
        answer: '',
        list: [
          {
            q: 'пользователя;',
            a: 'Пользователю хорошо когда сайт одинаково удобно просматривать на любом устройстве (отзывчивая/резиновая/адаптивная верстка).  Не должно быть горизонтального скролла, если только это не бухгалтерская таблица. \nПлохо, если элементы сайта "налезают" друг на друга, а текст сливается с фоном или плохо читается (маленький размер шрифта, или сам шрифт подобран неудачно)'
          },
          {
            q: 'менеджера проекта;',
            a: 'Для менеджера проекта главное чтобы дизайнер, программист и маркетолог были довольны версткой. А это значит, что верстка максимально соответствует макету. Верстка не должна "ехать" при изменении контента. Верстка валидна и оптимизирована для SEO (правильные теги для заголовков, необходимые атрибуты тегов, например, alt и title у img). Ну и не надо забывать про оптимизацию загрузки и доступность интерфейса ( о которой многие забывают). Сайт загружается в пределах допустимых метрик. Сайтом можно пользоваться с клавиатуры, кликабельные элементы подсвечиваются при получении фокуса через tab.',
          },
          {
            q: 'дизайнера;',
            a: 'Дизайнеру нужен пиксель-перфект. Дизайнер увидит смещение кнопки даже на 2 пикселя. Поэтому хорошая верстка для дизайнера эта та, которая полностью соответствует его макету.'
          },
          {
            q: 'верстальщика;',
            a: 'Верстальщику главное чтобы код легко читался. Необходимо соблюдать отступы в html. Грамотно подбирать имена для классов. Стили сгруппированы по логическому смыслу, чтобы легче ориентироваться и быстрее находить нужное свойство. я стараюсь придерживаться данного стиля написания кода http://codeguide.academy/html-css.html#css-order.'
          },
          {
            q: 'клиентского программиста;',
            a: 'К сожалению, я пока не работал в команде с другими разработчиками, поэтому на последние 2 пункта с ответом затрудняюсь. Но, мне кажется, что хорошая верстка должна быть с хорошей архитектурой, чтобы было понятно в какой папке и что лежит. Теги соответствуют содержимому, а названия классов помогают лучше понять структуру страницы. Верстка не едет при изменении контента.'
          },
          {
            q: 'серверного программиста.',
            a: 'К сожалению, я пока не работал в команде с другими разработчиками, поэтому на последние 2 пункта с ответом затрудняюсь. Но, мне кажется, что хорошая верстка должна быть с хорошей архитектурой, чтобы было понятно в какой папке и что лежит. Теги соответствуют содержимому, а названия классов помогают лучше понять структуру страницы. Верстка не едет при изменении контента.'
          },
        ]
      },
      {
        id: 'Q2',
        question: 'Опишите основные особенности верстки крупных многостраничных сайтов, дизайн которых может меняться в процессе реализации и поддержки. \nРасскажите о своем опыте верстки подобных сайтов: какие методологии, инструменты и технологии вы применяли на практике.',
        answer: 'Верстка должна быть модульной. Основные цвета и размеры заданы либо переменными препроцессоров, либо css переменными (если не нужна поддержка IE), чтобы можно было легко поменять дизайн элементов. Возможно, использование шаблонизаторов или препроцессоров html (например, pug) упростит верстку, если использовать миксины. Сейчас я работаю над многостраничным порталом. Делаю компоненты используя VueJs, БЭМ-нейминг. Стараюсь разбивать дизайн на множество мелких компонентов. До этого с многостраничниками не сталкивался.'
      },
      {
        id: 'Q3',
        question: 'Опишите основные особенности верстки сайтов, которые должны одинаково хорошо отображаться как на любом современном компьютере, так и на смартфонах и планшетах под управлением iOS и Android. Расскажите о своем опыте верстки подобных сайтов: какие инструменты и технологии вы применяли, как проверяли результат на различных устройствах, какие именно устройства требовалось поддерживать.',
        answer: 'Я думаю, что верстка должны быть отзывчивой, то есть резиновой и с медиавыражениями для перестройки макета когда это необходимо. Идеально начинать верстку с дизайна для мобильных, так как усложнять всегда проще, чем упрощать, а мобильный дизайн проще из-за меньшей ширины экрана. Но макет для десктопа всегда присылают первым, и я пока не работал по принципу "сначала мобильные". \nРазмеры элементов желательно задавать в относительных величинах % или rem/em (для отступов). \nРазмеры шрифта лучше, наверное, задавать в rem или em, чтобы размер менять только у тега html, а не у каждого элемента. \nРазные размеры изображений под различные разрешения экрана и под ретина экраны. У мобильного safari есть свои особенности (https://habrahabr.ru/post/332872/ эта статья у меня в закладках). \n\nЯ стараюсь делать верстку максимально резиновой, и использую медиавыражения по основным разрешениям (1440, 1280, 960, 768, 480 и 320, не все сразу, а в зависимости от сложности макета). Верстку подгоняю под устройства на которых тестирую, поэтому иногда получается так, что в промежутках между брейкпоинтами появляется скролл или некоторые элементы наезжают друг на друга. Это не правильно, но часто мне не хватает опыта быстро решить эту проблему, а на основных устройствах выглядит по макету. Проверяю результат с помощью Chrome DevTools и устройств что есть под рукой (чаще всего это IPhone 5c, Google Nexus 7 и пара андроид смартфонов). К сожалению, у меня нет возможности проверять верстку на ретина дисплеях.'
      },
      {
        id: 'Q4',
        question: 'Расскажите, какие инструменты помогают вам экономить время в процессе написания, проверки и отладки кода.',
        answer: 'При написании кода очень помогает emmet. eslint с конфигурацией от airbnb подсказывает как правильно писать код, а Prettier автоматически форматирует его. Также помогают дополнения к VScode, например, AutoFileName, Bracket Pair Colorizer. \n\nGulp и Webpack (не уверен, что это относится к данному вопросу, но пусть будет). Сам пытался их настроить только в начале знакомства с этими инструментами. Затем взял сборку gulp с курсов loftcshool и использую ее, дополняя необходимыми плагинами. \nC webpack`ом еще проще. Так как я разрабатываю на vuejs, то делаю готовую сборку с помощью vue-cli. \n\nПри отладке кода помогает лишь devtools в google chrome. К сожалению, тесты компонентов еще не писал. Да и вообще с тестированием не сталкивался.'
      },
      {
        id: 'Q5',
        question: 'Вам нужно понять, почему страница отображается некорректно в Safari на iOS и в IE на Windows. Код писали не вы, доступа к исходникам у вас нет. Ваши действия? Сталкивались ли вы с подобными проблемами на практике?',
        answer: 'С помощью панели разработчика (например, devtools в google chrome) найду проблемные места на сайте, посмотрю на стили. Проверю стили, в которых сомневаюсь, на совместимость с необходимыми браузерами через caniuse.com. \n\nС какими-то серьезными проблемами не сталкивался. Самая частая проблема это flexbox и max-height в IE.'
      },
      {
        id: 'Q6',
        question: 'Дизайнер отдал вам макет, в котором не показано, как должны выглядеть интерактивные элементы при наведении мыши. Ваши действия?',
        answer: 'Временно поставлю таким элементам прозрачность или просто поменяю цвет (но лучше поменять светлость или насыщенность в цветовой палитре hsl) при наведении и буду требовать с дизайнера все состояния интерактивных элементов.'
      },
      {
        id: 'Q7',
        question: 'Какие ресурсы вы используете для развития в профессиональной сфере? Приведите несколько конкретных примеров (сайты, блоги и так далее). Какое направление развития вам более близко: JS-программирование, HTML/CSS- верстка или и то, и другое? Какие ещё области знаний, кроме тех, что непосредственно относятся к работе, вам интересны?',
        answer: 'Большую часть информации о технологиях я получаю из телеграм-каналов, таких как Веб-стандарты, for Web,  FrontEndDev, Breakfast.JS и множество других. Иногда заглядываю в slack веб-стандартов, хекслет и лофтскул. Часто нахожу полезную информацию на хабре. Иногда читаю css-live. У меня нет постоянных рассылок с каких либо сайтов или блогов. Чаще всего я перехожу на статьи из телеграма. Стараюсь не пропускать митапы moscowcss, moscowjs, субботники от Яндекса и подобные бесплатные мероприятия (на платные я еще не заработал :)). \n\nИнтересны оба направления, но на данный момент хочется больше времени уделить именно верстке.  В верстке мне нравится, что результат работы виден сразу и его можно показать друзьям и родственникам. А еще мне хочется создавать крутые анимации, делать интерфейсы "живыми" и более отзывчивыми. Хотелось бы по-лучше разобраться с доступностью интерфейсов. Научиться правильно оптимизировать код, изображения. А через пару лет можно и к логике на js переходить. \n\nПоследний год интересуюсь только веб-технологиями, так как очень быстро обновляются спецификации, добавляются новые возможности в css и js. Меняются и появляются новые инструменты разработки. И так как опыта разработки у меня еще очень мало, на другие области знаний времени, чаще всего, не хватает. \n\nА вообще, мне интересны дизайн, психология, ИИ, робототехника. Но я никак не продвинулся в этих направлениях. '
      },
      {
        id: 'Q8',
        question: 'Расскажите нам о себе и предоставьте несколько ссылок на последние работы, выполненные вами.',
        answer: 'Обо мне в начале этой страницы. \n\nhttps://geekorn.github.io - сайт-портфолио, сделанный в рамках обучения в Школе онлайн образования LoftSchool. К сожалению, он давно не обновлялся. Хочу переписать его на VueJs. \nСсылка на последний сделанный мною проект: http://isonik.ru/'
      },
    ];